# Copyright 2020-2021, The Tremor Team
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# values.yaml
#
# Default values for the tremor Helm chart.
#
# @author Njegos Railic
# @copyright 2020-2021, The Tremor Team
#

affinity: {}

# Annotations to be added to Deployment or DaemonSet
annotations: {}

args: {}

autoscaling:
  annotations: {}
  customAutoscalingTemplate: []
  enabled: false
  maxReplicas: 2
  minReplicas: 1
  targetCPUUtilizationPercentage: 50
  targetMemoryUtilizationPercentage: 50

env: {}

extraContainers: []

extraInitContainers: []

extraVolumeMounts: []

extraVolumes: {}

files:
  main.troy: |-
    define flow main
    flow
      use std::time::nanos;
      use tremor::pipelines;
      use tremor::connectors;
      define connector every_second from metronome
      with
        config = {"interval": nanos::from_seconds(2)}
      end;

      create connector every_second;
      create connector console from connectors::console;
      create pipeline main from pipelines::passthrough;

      connect /connector/every_second to /pipeline/main;
      connect /pipeline/main to /connector/console;
    end;

    deploy flow main

fullnameOverride: ""

image:
  pullPolicy: IfNotPresent
  pullSecrets: []
  repository: tremorproject/tremor
  tag: 0.13.0-rc.12

# Tremor can be deployed as a DaemonSet as well
kind: DaemonSet

# Probes
livenessProbe:
  failureThreshold: 5
  httpGet:
    path: "/v1/version"
    port: 9898
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

readinessProbe:
  failureThreshold: 3
  httpGet:
    path: "/v1/version"
    port: 9898
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

startupProbe: []
# failureThreshold: 5
# httpGet:
#   port: 9898
#   scheme: TCP
# initialDelaySeconds: 5
# periodSeconds: 5
# successThreshold: 1
# timeoutSeconds: 2

nameOverride: ""

nodeSelector: {}

# Annotations to be added to pods
podAnnotations: {}

ports: {}

priorityClassName: ""

hostNetwork: false

# Please check HPA settings above
replicaCount: 1

resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  # OpenShift will set the correct nonroot userid by default
  # so the option runAsUser doesn't need to be supplied in that scenario.
  # If you are an OpenShift user please comment out the following line.
  runAsUser: 1000

service:
  annotations: {}
  enabled: false
  name: tremor
  type: ClusterIP

serviceAccount:
  create: true
  name: ""

tolerations: {}
# - effect: NoSchedule
#   operator: Exists

updateStrategy:
  rollingUpdate:
    maxUnavailable: 1
  type: RollingUpdate
